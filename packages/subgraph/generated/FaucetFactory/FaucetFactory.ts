// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewFaucet extends ethereum.Event {
  get params(): NewFaucet__Params {
    return new NewFaucet__Params(this);
  }
}

export class NewFaucet__Params {
  _event: NewFaucet;

  constructor(event: NewFaucet) {
    this._event = event;
  }

  get index(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get faucet(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class FaucetFactory extends ethereum.SmartContract {
  static bind(address: Address): FaucetFactory {
    return new FaucetFactory("FaucetFactory", address);
  }

  faucetCount(): BigInt {
    let result = super.call("faucetCount", "faucetCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_faucetCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("faucetCount", "faucetCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  faucets(param0: BigInt): Address {
    let result = super.call("faucets", "faucets(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_faucets(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("faucets", "faucets(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class CreateFaucetTokenCall extends ethereum.Call {
  get inputs(): CreateFaucetTokenCall__Inputs {
    return new CreateFaucetTokenCall__Inputs(this);
  }

  get outputs(): CreateFaucetTokenCall__Outputs {
    return new CreateFaucetTokenCall__Outputs(this);
  }
}

export class CreateFaucetTokenCall__Inputs {
  _call: CreateFaucetTokenCall;

  constructor(call: CreateFaucetTokenCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _symbol(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _imageUrl(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _decimals(): i32 {
    return this._call.inputValues[3].value.toI32();
  }

  get _dropletAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get _claimInterval(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class CreateFaucetTokenCall__Outputs {
  _call: CreateFaucetTokenCall;

  constructor(call: CreateFaucetTokenCall) {
    this._call = call;
  }
}
